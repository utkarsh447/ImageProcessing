/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imageprocessing;

import java.awt.RenderingHints.Key;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.security.SecureRandom;
import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.crypto.spec.DESedeKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
//import org.apache.commons.math3.ode.*;
/**
 *
 * @author utkarsh
 */
public class Imageprocess extends javax.swing.JFrame {

    /**
     * Creates new form Imageprocess
     */
    public Imageprocess() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        file_path = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        comboOne = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Choose");
        jButton1.setToolTipText("Click it!!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Encrypt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Decrypt");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        comboOne.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "DES", "TDES", "AES" }));
        comboOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jButton2)
                        .addGap(80, 80, 80)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(file_path, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(comboOne, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(file_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(16, 16, 16)
                .addComponent(comboOne, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser=new JFileChooser();
	chooser.showOpenDialog(null); 
	File f=chooser.getSelectedFile();
	file_path.setText(f.getAbsolutePath());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            if(itemtext=="DES")
            {
                FileInputStream file=new FileInputStream(file_path.getText());
                FileOutputStream outStream=new FileOutputStream("DESencrypt.jpg");
                byte k[]="Hari2k15".getBytes();
                SecretKeySpec key=new SecretKeySpec(k,"DES");
                Cipher enc=Cipher.getInstance("DES");
                enc.init(Cipher.ENCRYPT_MODE,key);
                CipherOutputStream cos=new CipherOutputStream(outStream,enc);
                byte[] buf=new byte[1024];
                int read;
                while((read=file.read(buf))!=-1){
                    cos.write(buf,0,read);
                }
                file.close();
                outStream.flush();
                cos.close();
                JOptionPane.showMessageDialog(null, "The DES Encrypt is Successful !!");
            }
            else if(itemtext=="TDES")
            {
/*                FileInputStream file=new FileInputStream(file_path.getText());
                FileOutputStream outStream=new FileOutputStream("TDESencrypt.jpg");
                
                byte rawkey[]="Hari2k15".getBytes();//FileInputStream file=new FileInputStream(file_path.getText());FileInputStream file=new FileInputStream(file_path.getText".getBytes();
           //     SecretKeySpec key=new SecretKeySpec(k,"DESede");
               // byte rawkey[]={2};
           //     int rawkey=127;
           //     String f="harik2k16";
           //     byte[] rawkey = new byte[(int) f.length()];
           //     System.out.println("a");  
                DESedeKeySpec keyspec = new DESedeKeySpec(rawkey);
          //                      System.out.println("a");  
                SecretKeyFactory keyfactory=SecretKeyFactory.getInstance("DESede");
                SecretKey key = keyfactory.generateSecret(keyspec);
 //                System.out.println("a");              
                Cipher enc=Cipher.getInstance("DESede");
                enc.init(Cipher.ENCRYPT_MODE,key);
                CipherOutputStream cos=new CipherOutputStream(outStream,enc);
                byte[] buf=new byte[1024];
                int read;
                while((read=file.read(buf))!=-1){
                    cos.write(buf,0,read);
                }
   
                file.close();
                outStream.flush();
                cos.close();
                JOptionPane.showMessageDialog(null, "The TDES Encrypt is Successful !!");
*/           
                FileInputStream file=new FileInputStream(file_path.getText());
                FileOutputStream outStream=new FileOutputStream("TDESencrypt.jpg");
                byte k[]="Hari2k15".getBytes();
                SecretKeySpec key=new SecretKeySpec(k,"DESede");
                Cipher enc=Cipher.getInstance("DESede");
                enc.init(Cipher.ENCRYPT_MODE,key);
                CipherOutputStream cos=new CipherOutputStream(outStream,enc);
                byte[] buf=new byte[1024];
                int read;
                while((read=file.read(buf))!=-1){
                    cos.write(buf,0,read);
                }
                file.close();
                outStream.flush();
                cos.close();
                JOptionPane.showMessageDialog(null, "The DES Encrypt is Successful !!");
            }
            
            else if (itemtext=="AES")
            {
                FileInputStream file=new FileInputStream(file_path.getText());
                FileOutputStream outStream=new FileOutputStream("AESencrypt.jpg");
                byte k[]="COoLUtKaHari2k15".getBytes();
                SecretKeySpec key=new SecretKeySpec(k,"AES");
                Cipher enc=Cipher.getInstance("AES");
                enc.init(Cipher.ENCRYPT_MODE,key);
                CipherOutputStream cos=new CipherOutputStream(outStream,enc);
                byte[] buf=new byte[1024];
                int read;
                while((read=file.read(buf))!=-1){
                    cos.write(buf,0,read);
                }
                file.close();
                outStream.flush();
                cos.close();
                JOptionPane.showMessageDialog(null, "The AES Encrypt is Successful !!");

            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please Select Other Option");
            }                                 
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            if(itemtext=="DES")
            {
                FileInputStream file=new FileInputStream(file_path.getText());
                FileOutputStream outStream=new FileOutputStream("DESdecrypt.jpg");
                byte k[]="Hari2k15".getBytes();
                SecretKeySpec key=new SecretKeySpec(k,"DES");
                Cipher enc=Cipher.getInstance("DES");
                enc.init(Cipher.DECRYPT_MODE,key);
                CipherOutputStream cos=new CipherOutputStream(outStream,enc);
                byte[] buf=new byte[1024];
                int read;
                while((read=file.read(buf))!=-1){
                    cos.write(buf,0,read);
                }
                file.close();
                outStream.flush();
                cos.close();
                JOptionPane.showMessageDialog(null, "The Decrypt is Successful !!");
            }
            else if(itemtext=="TDES")
            {
                
            }
            else if (itemtext=="AES")
            {
                FileInputStream file=new FileInputStream(file_path.getText());
                FileOutputStream outStream=new FileOutputStream("AESdecrypt.jpg");
                byte k[]="COoLUtKaHari2k15".getBytes();
                SecretKeySpec key=new SecretKeySpec(k,"AES");
                Cipher enc=Cipher.getInstance("AES");
                enc.init(Cipher.DECRYPT_MODE,key);
                CipherOutputStream cos=new CipherOutputStream(outStream,enc);
                byte[] buf=new byte[1024];
                int read;
                while((read=file.read(buf))!=-1){
                    cos.write(buf,0,read);
                }
                file.close();
                outStream.flush();
                cos.close();
                JOptionPane.showMessageDialog(null, "The AES Decrypt is Successful !!");

            }
            else
            {
                JOptionPane.showMessageDialog(null, "Please Select Other Option");
            } 
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    String itemtext=new String();
    private void comboOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOneActionPerformed
        // TODO add your handling code here:
        String itemText = (String)comboOne.getSelectedItem( );
        itemtext=itemText;
    }//GEN-LAST:event_comboOneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Imageprocess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Imageprocess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Imageprocess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Imageprocess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
//        Imageprocess comboOne=new Imageprocess();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Imageprocess().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox comboOne;
    private javax.swing.JTextField file_path;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables
}
